/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.JPSistemas.SistemaFuncionario.apresentacao;

import br.JPSistemas.SistemaFuncionario.entidade.Cargo;
import br.JPSistemas.SistemaFuncionario.entidade.Departamento;
import br.JPSistemas.SistemaFuncionario.entidade.Funcionario;
import br.JPSistemas.SistemaFuncionario.negocio.CPFJaCadastradoException;
import br.JPSistemas.SistemaFuncionario.negocio.DepartamentoBO;
import br.JPSistemas.SistemaFuncionario.negocio.FuncionarioBO;
import br.JPSistemas.SistemaFuncionario.negocio.ListaCargosVaziaException;
import br.JPSistemas.SistemaFuncionario.negocio.ListaDepartamentoVaziaException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author JOSIMAR
 */
public class TelaAlterarFuncionario extends javax.swing.JPanel implements AbaSelecionada {

    Funcionario funcionario;
    Departamento departamento;
    List<Cargo> cargos;
    List<Departamento> departamentos;
    TelaInicial inicial;

    public TelaAlterarFuncionario(Funcionario funcionario, TelaInicial telaInicial) {
        initComponents();
        departamento = new Departamento();
        cargos = new ArrayList<Cargo>();
        departamentos = new ArrayList<Departamento>();
        inicial = telaInicial;
        this.funcionario = funcionario;
    }

    public void carregarListaDepartamento() {
        try {
            DepartamentoBO departamentoBO = new DepartamentoBO();
            departamentos = departamentoBO.buscarTodos();
            for (int i = 0; i < departamentos.size(); i++) {
                Departamento departamento = departamentos.get(i);
                if (departamento.getCargos().size() > 0) {
                    cbxDepartamento.addItem(departamento.getArea());
                }
            }
        } catch (ListaDepartamentoVaziaException ex) {
            String titulo = "Lista de Departamentos";
            String mensagem = "Lista de Departamento Vazia, Cadastre um Departamento e seus cargos para Realizar o Cadastro do Funcionario";
            JOptionPane.showMessageDialog(this, mensagem, titulo, JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TelaAlterarFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            String titulo = "Erro ao Carregar lista de Departamentos!";
            String mensagem = "Ocorreu um erro inesperado, Favor entra em contato com o administrador";
            JOptionPane.showMessageDialog(this, mensagem, titulo, JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TelaAlterarFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        txtRg = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDataNascimento = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        cbxCargo = new javax.swing.JComboBox();
        cbxDepartamento = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();

        jLabel1.setText("Nome*");

        jLabel2.setText(" CPF *");

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfActionPerformed(evt);
            }
        });

        jLabel3.setText("RG *");

        try {
            txtDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel4.setText("Data de Nascimento *");

        jLabel5.setText("Cargo");

        btnSalvar.setText("Alterar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        cbxCargo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cbxCargoMouseMoved(evt);
            }
        });

        cbxDepartamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxDepartamentoItemStateChanged(evt);
            }
        });
        cbxDepartamento.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                cbxDepartamentoAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cbxDepartamento.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                cbxDepartamentoMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cbxDepartamentoMouseMoved(evt);
            }
        });
        cbxDepartamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbxDepartamentoFocusLost(evt);
            }
        });
        cbxDepartamento.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                cbxDepartamentoAncestorMoved1(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        cbxDepartamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxDepartamentoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cbxDepartamentoMouseEntered(evt);
            }
        });
        cbxDepartamento.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                cbxDepartamentoComponentShown(evt);
            }
        });
        cbxDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDepartamentoActionPerformed(evt);
            }
        });

        jLabel8.setText("Departamento");

        jLabel6.setText("* Campos Obrigatórios");

        jLabel7.setText("Código");

        txtCodigo.setEnabled(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbxCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(txtRg, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxDepartamento, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 84, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addGap(1, 1, 1)
                .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvar)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            camposObrigatorios();
            String CPFAntigo = funcionario.getCpf();
            FuncionarioBO funcionarioBO = new FuncionarioBO();
            lerDadosTela();
            funcionarioBO.alterar(funcionario, CPFAntigo);
            String mensagem = "Funcionario Alterado com Sucesso!";
            String titulo = "Altaração de Funcionário";
            JOptionPane.showMessageDialog(this, mensagem, titulo, JOptionPane.INFORMATION_MESSAGE);
            inicial.tpPrincipal.remove(inicial.tpPrincipal.getSelectedIndex());
        } catch (CamposObrigatoriosException ex) {
            String titulo = "Erro ao Alterar Funcionário";
            String mensagem = "Campo(s) Obrigatório(s) Não Preenchido(s)!";
            JOptionPane.showMessageDialog(this, mensagem, titulo, JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TelaCadastroDepartamento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CPFJaCadastradoException e) {
            String titulo = "Erro ao Alterar Funcionário";
            String mensagem = "CPF de Funcionario ja Cadastrado!";
            JOptionPane.showMessageDialog(this, mensagem, titulo, JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TelaAlterarFuncionario.class.getName()).log(Level.SEVERE, null, e);
        } catch (Exception ex) {
            String titulo = "Erro ao Alterar Funcionário!";
            String mensagem = "Ocorreu um erro inesperado, Favor entra em contato com o administrador";
            JOptionPane.showMessageDialog(this, mensagem, titulo, JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TelaAlterarFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
// TODO add your handling code here:
// TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cbxDepartamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxDepartamentoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxDepartamentoMouseClicked

    private void cbxDepartamentoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxDepartamentoMouseMoved
// TODO add your handling code here:
    }//GEN-LAST:event_cbxDepartamentoMouseMoved

    private void cbxCargoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxCargoMouseMoved

// TODO add your handling code here:
    }//GEN-LAST:event_cbxCargoMouseMoved

    private void cbxDepartamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxDepartamentoFocusLost
        /*Departamento departamento = departamentos.get(cbxDepartamento.getSelectedIndex());
         if (departamentoSelecionado.getId() != departamento.getId()) {*/

        // }
    }//GEN-LAST:event_cbxDepartamentoFocusLost

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void cbxDepartamentoAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbxDepartamentoAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxDepartamentoAncestorMoved

    private void cbxDepartamentoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxDepartamentoMouseDragged

    }//GEN-LAST:event_cbxDepartamentoMouseDragged

    private void cbxDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDepartamentoActionPerformed
        
    }//GEN-LAST:event_cbxDepartamentoActionPerformed

    private void cbxDepartamentoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cbxDepartamentoComponentShown
        
    }//GEN-LAST:event_cbxDepartamentoComponentShown

    private void cbxDepartamentoAncestorMoved1(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_cbxDepartamentoAncestorMoved1
        
    }//GEN-LAST:event_cbxDepartamentoAncestorMoved1

    private void cbxDepartamentoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxDepartamentoMouseEntered
      
    }//GEN-LAST:event_cbxDepartamentoMouseEntered

    private void cbxDepartamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxDepartamentoItemStateChanged
        cbxCargo.removeAllItems();
        carregarListaCargos();
    }//GEN-LAST:event_cbxDepartamentoItemStateChanged
    public void carregarListaCargos() {
        int linha = cbxDepartamento.getSelectedIndex();
        cargos = departamentos.get(linha).getCargos();
        try {
            for (int i = 0; i < cargos.size(); i++) {
                Cargo cargo = cargos.get(i);
                cbxCargo.addItem(cargo.getNome());
            }
        } catch (ListaCargosVaziaException e) {
            String titulo = "Lista de Cargos";
            String mensagem = "Lista de Cargo Vazia, Cadastre um Cargo e seus cargos para Realizar o Cadastro do Funcionario";
            JOptionPane.showMessageDialog(this, mensagem, titulo, JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TelaAlterarFuncionario.class.getName()).log(Level.SEVERE, null, e);
        } catch (Exception e) {
            String titulo = "Erro ao Carregar lista de cargos!";
            String mensagem = "Ocorreu um erro inesperado, Favor entra em contato com o administrador";
            JOptionPane.showMessageDialog(this, mensagem, titulo, JOptionPane.ERROR_MESSAGE);
        }

    }

    public void lerDadosTela() throws ParseException {
        funcionario.setNome(txtNome.getText());
        funcionario.setCpf(txtCpf.getText());
        int linha = cbxDepartamento.getSelectedIndex();
        cargos = departamentos.get(linha).getCargos();
        linha = cbxCargo.getSelectedIndex();
        funcionario.setCargo(cargos.get(linha));
        funcionario.setRg(txtRg.getText());
        String formato = "dd/MM/yyyy";
        java.util.Date date = new SimpleDateFormat(formato).parse(txtDataNascimento.getText());
        funcionario.setDataNascimento(date);
        funcionario.setSalario(cargos.get(linha).getSalario());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbxCargo;
    private javax.swing.JComboBox cbxDepartamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtDataNascimento;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRg;
    // End of variables declaration//GEN-END:variables

    @Override
    public void OnAbaSelecionada() {
        cbxDepartamento.removeAllItems();
        cbxCargo.removeAllItems();
        carregarListaDepartamento();
        carregarListaCargos();
        txtNome.setText(funcionario.getNome());
        txtCpf.setText(funcionario.getCpf());
        txtRg.setText(funcionario.getRg());
        String formato = "dd/MM/yyyy";
        String date = new SimpleDateFormat(formato).format(funcionario.getDataNascimento());
        txtDataNascimento.setText(date);
        cbxDepartamento.setSelectedItem(funcionario.getCargo().getDepartamento());
        cbxCargo.setSelectedItem(funcionario.getCargo());
        txtCodigo.setText(String.valueOf(funcionario.getId()));

    }

    private void camposObrigatorios() {
        if (txtNome.getText().isEmpty() || txtCpf.getText().isEmpty()
                || txtRg.getText().isEmpty() || txtDataNascimento.getText().isEmpty()) {
            throw new CamposObrigatoriosException();
        }
    }
}
